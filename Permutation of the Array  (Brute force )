// But this method is brute force and take more time as well as auxilary space is o(n! * n);

#include <bits/stdc++.h>

using namespace std;

void solve(vector<int>arr , vector<int>ds , bool ar[] , vector<vector<int>>& ans){
    if(ds.size() == arr.size()){
        ans.push_back(ds);
        return  ;
    }
    
    for(int i=0 ; i<arr.size() ; i++){
        if(!ar[i]){
            ar[i] = true ;
            ds.push_back(arr[i]);
            solve(arr , ds , ar , ans);
            ds.pop_back();
            ar[i] = false ;
        }
    }
}

vector<vector<int>> permutation(vector<int> arr , int n){
    vector<vector<int>> ans ;
    vector<int>ds ;
    bool ar[3] ;
    
    solve(arr , ds , ar , ans);
    return ans ;
}


int main()
{
    vector<int> num = {1,2,3 ,4} ;
    
    vector<vector<int>> t ;
    
    t = permutation(num , 4);
    
    for(auto it : t){
        for(auto i : it ){
            cout << i << " "; 
        }cout << endl ;
    }

    return 0;
}
