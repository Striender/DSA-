#include <iostream>

using namespace std;

class Node {
    public:
    int data ;
    Node* next ;
    
    Node(int data){
        this -> data = data ;
        this -> next = NULL ;
    }
};

void insertAtBegining(Node* &head , int data){
    Node* temp = new Node(data) ;
    temp -> next = head ;
    head = temp ;
}

void insertAtEnd(Node* &tail , int data){
    Node* temp = new Node(data) ;
    tail -> next = temp ;
    tail = temp ;
}

void reverse(Node* &head ){
    Node* current = head;
    Node *prev = NULL, *next = NULL;

    while (current != NULL) {
        // Store next
        next = current->next;
        // Reverse current node's pointer
        current->next = prev;
        // Move pointers one position ahead.
        prev = current;
        current = next;
    }
    head = prev;
}

void insertAtMiddle(Node* &tail , Node* &head , int pos , int data){
    Node* temp = head ;
    Node* newNode = new Node(data) ;
    
    if(pos == 0 ){
        insertAtBegining(head , data);
        return ;
    }
    int c = 0 ;
    
    while(c < pos - 1){
        temp = temp -> next ;
        c ++ ;
    }
    
    // inserting at the last element 
    
    if(temp -> next == NULL){
        insertAtEnd(tail ,data) ;
        return ;
    }
    
    newNode -> next = temp -> next ;
    temp -> next = newNode ;
}

void print(Node* &head){
    Node* temp = head ;
    while(temp != NULL){
        cout << temp -> data <<" " ;
        temp = temp ->next ;
    }cout << endl ;
}
int Len (Node* head){
    Node* temp = head ;
    int c = 0 ;
    while(temp != NULL){
        c++ ;
        temp = temp -> next ;
    }
    c = c / 2 ;
    return c  ;
} 


Node* deleteMiddle(Node* &head) {
   
    int mid = Len (head) ;
    
    cout << mid << endl; 
    
    Node* temp = head ;
    int c = 0 ;
    while(c < mid){
        temp = temp -> next ;
        c ++ ;
    }
    Node* mi = temp -> next ;
    if(mi -> next != NULL ){
        temp -> next = mi -> next ;
        mi -> next =  NULL ;
    }else{
        temp -> next = NULL ;
    }
    return head ;
}

int main()
{
    Node* n1 = new Node(10) ;
    Node* head = n1 ;
    Node* tail = n1 ;
    
    cout<< endl ;
    
    insertAtEnd(tail , 17);
    insertAtEnd(tail , 18);
    insertAtEnd(tail , 19);
    insertAtEnd(tail , 20);
    insertAtEnd(tail , 21);
    
    
    
    print(head);
    
    cout << endl ;
    
    
    cout << Len(head) << endl ;
    
    Node* hea = deleteMiddle (head) ;
    
    print(hea) ;
    
    return 0;
}

